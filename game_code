<!DOCTYPE HTML>
<html>
  <head>
		<title>GAME</title>
		<style>
			body {
				margin: 2px 450px;
				padding: 0em 0.625em 0em;
				background-image: url(images/bkbk2.jpg);
				background-repeat: no-repeat;
				
			}
		</style>
		<script src="pixi.js"></script>
		<script src="../../src/pixi/renderers/WebGLRenderer.js"></script>
		
	</head>
	<body>
		<div style="color:#FEEF30; width:100px; margin:0px;"
		id="score2">
		Score 2 : 0
		</div>
		
		<div style="color:#0000FF; width:100px; margin:-20px 0% 0% 85%;"
		id="score">
		Score : 0
		</div>
		
		<audio autoplay loop id="bkaudio">
		<source src="sounds/bkmusic.wav" type="audio/wav">
		<source src="sounds/bkmusic.mp3" type="audio/mpeg">
		Your browser does not support the audio element.
		
		</audio>
		<audio id="explosionsound">
		<source src="sounds/explosion.wav" type="audio/wav">
		<source src="sounds/explosion.mp3" type="audio/mpeg">
		Your browser does not support the audio element.
		</audio>
		
		</audio>
		<audio id="buttonclick">
		<source src="sounds/buttonclick.wav" type="audio/wav">
		<source src="sounds/buttonclick.mp3" type="audio/mpeg">
		Your browser does not support the audio element.
		</audio>
		
		<script>
	
			// create an new instance of a pixi stage
			var interactive = true;
			var stage = new PIXI.Stage(0x000000, interactive);
			var stage1 = new PIXI.Stage(0x000000, interactive);
			var stage2 = new PIXI.Stage(0x000000, interactive);
			
			// create a renderer instance
			w=window.innerWidth/3;
			h=window.innerHeight-20;
			var renderer = PIXI.autoDetectRenderer(w,h);
			
			// add the renderer view element to the DOM
			document.body.appendChild(renderer.view);
			
			requestAnimFrame( animate );
			
			
			//------------------------------------------------------------GLOBAL VARIABLES------------------------------------------------------------------//
			
			var loops = 0;
			var count = 0;
			var count2 = 0;
			var enemiescount= 0;
			var ebulletscount =0;
			var gamepause=0;
			var score=new Number(0);
			var score2=new Number(0);
			var lifes=3;
			var lifes2=3;
			var isdead=0;
			var died1=0;
			var died2=0;
			var isdead2=0;
			var bonuscount=0;
			var x2=0;
			var x3=0;
			var x22=0;
			var x23=0;
			var loopsx2=0;
			var loopsx3=0;
			var loopsx22=0;
			var loopsx32=0;
			var over=0;
			var ex=0;
			var waitdie=0;
			var soundmute=0;
			var players=0;
			var easiness=0;
			var player1exists=0;
			var player2exists=0;
			var sj1=0;
			var sj2=0;
			var sj3=0;
			var winner=0;
			var waswinner=0;
			//-------------------------------------------------------------------ARRAYS------------------------------------------------------------------------//
			
			var bullets = []; 
			var bullets2 = []; 
			var targets = []; 
			var ebullets = [];
			var bonuses=[];
			var index=[];
			
			//--------    -----------------------------------------------------CREATE TEXTURES------------------------------------------------------------------//
			var texture = PIXI.Texture.fromImage("images/jet.png");
			var texture2 = PIXI.Texture.fromImage("images/bullet.png");
			var texture3 = PIXI.Texture.fromImage("images/target.png");
			var texture4 = PIXI.Texture.fromImage("images/explosion.png");
			var texture5 = PIXI.Texture.fromImage("images/bullet2.png");
			var texture6 = PIXI.Texture.fromImage("images/mute.png");
			var texture7 = PIXI.Texture.fromImage("images/loud.png");
			var texture8 = PIXI.Texture.fromImage("images/pause.png");
			var texture9 = PIXI.Texture.fromImage("images/resume.png");
			var texture10 = PIXI.Texture.fromImage("images/mute.png");
			var texture11 = PIXI.Texture.fromImage("images/loud.png");
			var texture12 = PIXI.Texture.fromImage("images/smalljet.png");
			var texture13 = PIXI.Texture.fromImage("images/restart.png");
			var texture14 = PIXI.Texture.fromImage("images/multiplier2.png");
			var texture15 = PIXI.Texture.fromImage("images/multiplier3.png");
			var texture16 = PIXI.Texture.fromImage("images/bomb.png");
			var texture17 = PIXI.Texture.fromImage("images/extralife.png");
			var texture18 = PIXI.Texture.fromImage("images/gameover.png");
			var texture19 = PIXI.Texture.fromImage("images/button-playagain.png");
			var texture20 = PIXI.Texture.fromImage("images/button-mainmenu.png");
			var texture21 = PIXI.Texture.fromImage("images/button-1player.png");
			var texture22 = PIXI.Texture.fromImage("images/button-2players.png");
			var texture23 = PIXI.Texture.fromImage("images/bkmain.jpg");
			var texture24 = PIXI.Texture.fromImage("images/easy.png");
			var texture25 = PIXI.Texture.fromImage("images/medium.png");
			var texture26 = PIXI.Texture.fromImage("images/hard.png");
			var texture27 = PIXI.Texture.fromImage("images/mainmenu2.png");
			var texture28 = PIXI.Texture.fromImage("images/menu.png");
			var texture29 = PIXI.Texture.fromImage("images/jet2.png");
			var texture30 = PIXI.Texture.fromImage("images/smalljet2.png");
			var texture31 = PIXI.Texture.fromImage("images/bullet3.png");
			var texture32 = PIXI.Texture.fromImage("images/player1wins.png");
			var texture33 = PIXI.Texture.fromImage("images/player2wins.png");
			var texture34 = PIXI.Texture.fromImage("images/tie.png");
			//---------------------------------------------------------------------SOUNDS---------------------------------------------------------------------//
			var a =document.getElementById('bkaudio');
			var exsound =document.getElementById('explosionsound');
			var btnclick=document.getElementById('buttonclick');
			//-----------------------------------------------------------CREATE MAIN MENU-------------------------------------------------------------//
			
			var bkmenu = new PIXI.Sprite(texture23);
			
			bkmenu.anchor.x=0.5;
			bkmenu.anchor.y=0.5;
			
			bkmenu.position.x=w/2;
			bkmenu.position.y=h/2;
			
			bkmenu.width=w;
			bkmenu.height=h;
			
			var player1 = new PIXI.Sprite(texture21);
			
			player1.anchor.x=0.5;
			player1.anchor.y=0.5;
			
			player1.position.x=w*0.3;
			player1.position.y=h/14;
			
			player1.width=w*0.4;
			player1.height=h*0.055;
			
			player1.setInteractive(true);
			
			var player2 = new PIXI.Sprite(texture22);
			
			player2.anchor.x=0.5;
			player2.anchor.y=0.5;
			
			player2.position.x=w*0.6;
			player2.position.y=h/7;
			
			player2.width=w*0.4;
			player2.height=h*0.055;
			
			player2.setInteractive(true);
			
			stage2.addChild(bkmenu);
			stage2.addChild(player1);
			stage2.addChild(player2);
			
			//------------------------------------------------------------1 PLAYER---------------------------------------------------------------//
			
			
			player1.mousedown = player1.touchstart = function(data)
			{
				if(over==0)
				{
					players=1;
					if(soundmute==0)
					{
						btnclick.play();
					}
						
					stage2.removeChild(player1);
					stage2.removeChild(player2);
					
					stage2.addChild(easy);
					stage2.addChild(medium);
					stage2.addChild(hard);
					stage2.addChild(mainmenu2);
					
					
				}
			}
		
			//------------------------------------------------------------2 PLAYERS---------------------------------------------------------------//
			
			
			player2.mousedown = player2.touchstart = function(data)
			{
				if(over==0)
				{
					players=2;
					if(soundmute==0)
					{
						btnclick.play();
					}
					
					stage2.removeChild(player1);
					stage2.removeChild(player2);
					
					stage2.addChild(easy);
					stage2.addChild(medium);
					stage2.addChild(hard);
					stage2.addChild(mainmenu2);
					addlifes2();
					
				}
			}
			
			//------------------------------------------------------------------- SECOND MENU-------------------------------------------------------------//
			
			var easy = new PIXI.Sprite(texture24);
			
			easy.anchor.x=0.5;
			easy.anchor.y=0.5;
			
			easy.position.x=w/5;
			easy.position.y=h/14;
			
			easy.width=w*0.4;
			easy.height=h*0.055;
			
			easy.setInteractive(true);
			var medium = new PIXI.Sprite(texture25);
			
			medium.anchor.x=0.5;
			medium.anchor.y=0.5;
			
			medium.position.x=w*0.4;
			medium.position.y=h/7;
			
			medium.width=w*0.4;
			medium.height=h*0.055;
			
			medium.setInteractive(true);
			
			var hard = new PIXI.Sprite(texture26);
			
			hard.anchor.x=0.5;
			hard.anchor.y=0.5;
			
			hard.position.x=w*0.6;
			hard.position.y=h*3/14;
			
			hard.width=w*0.4;
			hard.height=h*0.055;
			
			hard.setInteractive(true);
			
			var mainmenu2 = new PIXI.Sprite(texture27);
			
			mainmenu2.anchor.x=0.5;
			mainmenu2.anchor.y=0.5;
			
			mainmenu2.position.x=w*0.8;
			mainmenu2.position.y=h*2/7;
			
			mainmenu2.width=w*0.4;
			mainmenu2.height=h*0.055;
			
			mainmenu2.setInteractive(true);
			

			//------------------------------------------------------------EASY---------------------------------------------------------------//
			
			
			easy.mousedown = easy.touchstart = function(data)
			{
				if(over==0)
				{
					if(soundmute==0)
					{
						btnclick.play();
					}
					st();
					easiness=1;
					over=2;
				}
			}
		
			//------------------------------------------------------------MEDIUM---------------------------------------------------------------//
			
			
			medium.mousedown = medium.touchstart = function(data)
			{
				if(over==0)
				{
					if(soundmute==0)
					{
						btnclick.play();
					}
					st();
					easiness=2;
					over=2;
				}
			}
			
			//------------------------------------------------------------HARD---------------------------------------------------------------//
			
			
			hard.mousedown = hard.touchstart = function(data)
			{
				if(over==0)
				{
					if(soundmute==0)
					{
						btnclick.play();
					}
					st();
					easiness=3;
					over=2;
				}
			}
			//--------------------------------------------------------------MAIN MENU---------------------------------------------------------------------//
				mainmenu2.mousedown = mainmenu2.touchstart = function(data)
			{
				if(over==0)
				{
					returntofirstpage();
					if(soundmute==0)
					{
						btnclick.play();
					}
					
				}
			}
			function returntofirstpage()
			{
				
				stage2.addChild(bkmenu);
				stage2.removeChild(easy);
				stage2.removeChild(medium);
				stage2.removeChild(hard);
				stage2.removeChild(mainmenu2);
				stage2.addChild(player1);
				stage2.addChild(player2);
				
			}
			//----------------------------------------------------------------PRIMARY SCENE--------------------------------------------------------------//
			var background = PIXI.Sprite.fromImage("images/bk-2.png");
			var background2 = PIXI.Sprite.fromImage("images/bk-2.png");
			
			background.position.y=0;
			background2.position.y=-h;
			
			background.width=w;
			background.height=h;
			
			background2.width=w;
			background2.height=h;
			stage.addChild(background);
			stage.addChild(background2);
			//-----------------------------------------------------------------BACKGROUND MOVEMENT-------------------------------------------------------------//
			function backgroundmove()
			{
				
				if (easiness==3)	
				{
					if ( background2.position.y == 0 || background2.position.y==1)
					{
						background.position.y= -h;
					}
					if(background.position.y==0 || background.position.y==1)
					{
						background2.position.y=-h;
					}	
					background.position.y+=2;
					background2.position.y+=2;
				}
				else 
				{
					if ( background2.position.y == 0 )
					{
						background.position.y= -h;
					}
					if(background.position.y==0 )
					{
						background2.position.y=-h;
					}	
					background.position.y+=1;
					background2.position.y+=1;
				}
			}
			
			//--------------------------------------------------------------------CREATE LIFES--------------------------------------------------------------------//
			var smalljet1 = new PIXI.Sprite(texture12);
			
			smalljet1.anchor.x = 0.5;
			smalljet1.anchor.y = 0.5;
			
			smalljet1.position.x = 0.96*w;
			smalljet1.position.y = 0.029*h;
			
			smalljet1.width=w*0.08;
			smalljet1.height=h*0.04;
			
			var smalljet2 = new PIXI.Sprite(texture12);
			
			smalljet2.anchor.x = 0.5;
			smalljet2.anchor.y = 0.5;
			
			smalljet2.position.x = 0.88*w;
			smalljet2.position.y = 0.029*h;
			
			smalljet2.width=w*0.08;
			smalljet2.height=h*0.04;
			
			var smalljet3 = new PIXI.Sprite(texture12);
			
			smalljet3.anchor.x = 0.5;
			smalljet3.anchor.y = 0.5;
			
			smalljet3.position.x = 0.8*w;
			smalljet3.position.y = 0.029*h;
			
			smalljet3.width=w*0.08;
			smalljet3.height=h*0.04;
			
			var smalljet21 = new PIXI.Sprite(texture30);
			
			smalljet21.anchor.x = 0.5;
			smalljet21.anchor.y = 0.5;
			
			smalljet21.position.x = 0.04*w;
			smalljet21.position.y = 0.029*h;
			
			smalljet21.width=w*0.08;
			smalljet21.height=h*0.04;
				
			var smalljet22 = new PIXI.Sprite(texture30);
			
			smalljet22.anchor.x = 0.5;
			smalljet22.anchor.y = 0.5;
			
			smalljet22.position.x = 0.12*w;
			smalljet22.position.y = 0.029*h;
			
			smalljet22.width=w*0.08;
			smalljet22.height=h*0.04;
				
				
			var smalljet23 = new PIXI.Sprite(texture30);
				
			smalljet23.anchor.x = 0.5;
			smalljet23.anchor.y = 0.5;
				
			smalljet23.position.x = 0.2*w;
			smalljet23.position.y = 0.029*h;
			
			smalljet23.width=w*0.08;
			smalljet23.height=h*0.04;
			//--------------------------------------------------------------------CREATE JET--------------------------------------------------------------------//
			var jet = new PIXI.Sprite(texture);
			jet.setInteractive(true);
			jet.anchor.x = 0.5;
			jet.anchor.y = 0.5;
			
			jet.width=0.4*w;
			jet.height=0.2*h;
			
			//--------------------------------------------------------------------CREATE JET2--------------------------------------------------------------------//
			var jet2 = new PIXI.Sprite(texture29);
			
			jet2.anchor.x = 0.5;
			jet2.anchor.y = 0.5;
			
			jet2.width=0.4*w;
			jet2.height=0.2*h;
			
			//--------------------------------------------------------------MOUSE OVER 'MOVE JET'------------------------------------------------------//
			
			jet.mouseover= function(data)
			{
				this.data = data;
				this.dragging = true;
			};
				
			jet.mouseout = function(data)
			{
				this.dragging = false;
				this.data = null;
			};
				
			jet.mousemove = jet.touchmove = function(data)
			{
				if(this.dragging)
				{
					var newPosition = this.data.getLocalPosition(this.parent);
					this.position.x = newPosition.x;
					this.position.y = newPosition.y;
				}
			}
				
			//--------------------------------------------------------------KEYBOARD 'MOVE JET'------------------------------------------------------//
			if(players==2)
			{
				window.addEventListener('keydown',this.check,false);
			}
			function check(evt)
			{
				switch(evt.keyCode)
				{
					case 38:
					{
						if(jet2.position.y-10>0)
						{
							jet2.position.y-=10;
						}
						else				
						{
							jet2.position.y=0;
						}	
						break;
					}
					case 40:
					{	
						if(jet2.position.y+10<h)
						{
							jet2.position.y+=10;
						}
						else				
						{
							jet2.position.y=h;
						}
						break;
					}
					case 37:
					{
						if(jet2.position.x-10>0)
						{
							jet2.position.x-=10;
						}
						else				
						{
							jet2.position.x=0;
						}
						break;
					}
					case 39:
					{
						if(jet2.position.x+10<w)
						{
							jet2.position.x+=10;
						}
						else				
						{
							jet2.position.x=w;
						}
						break;
					}
					case 32:
					{
						fire();
						break;
					}
				}
			}
			
			//-----------------------------------------------------------------GENERATE ENEMIES-----------------------------------------------------------------//
			
			function generateenemies()
			{
				var c;
				if(easiness==1)
				{
					c=Math.floor( Math.random () *5 )+ 1;
					enemiescount+=c;
				}
				if(easiness==2)
				{
					c=Math.floor( Math.random () *5 )+ 2 ;
					enemiescount+=c;
				}
				if(easiness==3)
				{
					c=Math.floor( Math.random () *5 )+ 4 ;
					enemiescount+=c;
				}
				for ( var i=0 ; i<c ; i++ )
				{
					var target = new PIXI.Sprite(texture3);
					
					target.anchor.x = 0.5;
					target.anchor.y = 0.5;
					
					target.position.x= Math.random() * w;
					target.position.y= -0.043*h -(Math.random() * 0.07*h);
					
					target.width=0.22*w;
					target.height=0.15*h;
					
					targets.push(target);
					stage.addChild(target);
				}
			};
			
			generateenemies();
			
			//--------------------------------------------------------------------MOVE ENEMIES-------------------------------------------------------------------//
			
			function enemiesmove()
			{
				for(var k=0; k<enemiescount; k++)
				{
					if(targets[k].position.y>=1.05*h)
					{
						stage.removeChild(targets[k]);
						targets.splice( k, 1);
						k--;
						enemiescount--;
						
					}
					
					else 
					{	if(easiness==1 || easiness==2)
						{
							targets[k].position.y+=1 + Math.random() ;
						}
						else if (easiness==3)
						{
							targets[k].position.y+=1.5 + Math.random() ;
						}
						if(easiness==2 || easiness==3)
						{	
							
							var movement;
							if(easiness==2)
							{
								movement=0.02*w;
							}
							else if(easiness==3)
							{
								movement=0.04*w;
							}
							if (loops %10== 0 )
							{
							
								var rnd =Math.floor( Math.random() * 2); 
								if ( rnd ==0 ) 
								{
									var newx = targets[k].position.x + Math.random() *movement ;
									if ( newx > w )
									{
										targets[k].position.x-=Math.random()* movement;
									}
									else 
									{
										targets[k].position.x+=Math.random()* movement  ;
									}
								}
								else 
								{
									var newx = targets[k].position.x - Math.random() *movement ;
									if ( newx < 0 )
									{
										targets[k].position.x+=Math.random() *movement ;
									}
									else 
									{
										targets[k].position.x-=Math.random() *movement ;
									}
								}
							}
						}	
					}
							
				};
				
			}
				
				
			//------------------------------------------------------------CLICK 'BULLETS'---------------------------------------------------------------//
			
			
			jet.mousedown = jet.touchstart = function(data)
			{
					
				this.isdown = true;
					
				var bullet = new PIXI.Sprite(texture2);
				var bullet2 = new PIXI.Sprite(texture2);
					
				bullet.anchor.x = 0.5;
				bullet.anchor.y = 0.5;
			
				bullet2.anchor.x = 0.5;
				bullet2.anchor.y = 0.5;
					
				count+=2;
				
				bullet.position.x=this.position.x + 0.09*w;
				bullet.position.y= this.position.y - 0.058*h;
					
				bullet2.position.x=this.position.x - 0.09*w;
				bullet2.position.y= this.position.y - 0.058*h;
				
				bullet.width=0.006*w;
				bullet.height=0.016*h;
				
				bullet2.width=0.006*w;
				bullet2.height=0.016*h;
				
				stage.addChild(bullet);
				stage.addChild(bullet2);
				bullets.push(bullet);
				bullets.push(bullet2);
					
			}
			//------------------------------------------------------------SPACE 'BULLETS'---------------------------------------------------------------//
			function fire()
			{
				var bullet3 = new PIXI.Sprite(texture31);
				var bullet4 = new PIXI.Sprite(texture31);
					
				bullet3.anchor.x = 0.5;
				bullet3.anchor.y = 0.5;
			
				bullet4.anchor.x = 0.5;
				bullet4.anchor.y = 0.5;
					
				count2+=2;
				
				bullet3.position.x=jet2.position.x + 0.09*w;
				bullet3.position.y= jet2.position.y - 0.058*h;
					
				bullet4.position.x=jet2.position.x - 0.09*w;
				bullet4.position.y= jet2.position.y - 0.058*h;
				
				bullet3.width=0.006*w;
				bullet3.height=0.016*h;
				
				bullet4.width=0.006*w;
				bullet4.height=0.016*h;
				
				stage.addChild(bullet3);
				stage.addChild(bullet4);
				bullets2.push(bullet3);
				bullets2.push(bullet4);
					
			}
				
						
			//-----------------------------------------------------------------MOVE BULLETS -------------------------------------------------------------------//
			
			function bulletsmove()
			{
				for(var i=0 ; i<count  ; i++)
				{
					if(bullets[i].position.y<=-3)
					{
						stage.removeChild(bullets[i]);
						bullets.splice( i, 1);
						i--;
						count--;
					}
					
					else 
					{
						if(easiness==1 || easiness==2 )
						{
							bullets[i].position.y-=1;
						}
						else if (easiness==3)
						{
							bullets[i].position.y-=2;
						}
					}
					
				};
				
				if(players==2)
				{
					for(var i=0 ; i<count2  ; i++)
					{
						if(bullets2[i].position.y<=-3)
						{
							stage.removeChild(bullets2[i]);
							bullets2.splice( i, 1);
							i--;
							count2--;
						}
						
						else 
						{
							if(easiness==1 || easiness==2 )
							{
								bullets2[i].position.y-=1;
							}
							else if (easiness==3)
							{
								bullets2[i].position.y-=2;
							}
						}
						
					};
				}
			}
				
			//---------------------------------------------------------------GENERATE EBULLETS------------------------------------------------------------//
			
			
			function generatebullets()
			{
				if (easiness==1)
				{
					var c=Math.ceil( Math.random () * 2 ) ;
					ebulletscount+=c;
				}
				else
				{
					var c=Math.ceil( Math.random () * 4 ) ;
					ebulletscount+=c;
				}
				
				for ( var i=0 ; i<c ; i++ )
				{
					var ebullet = new PIXI.Sprite(texture5);
					
					ebullet.anchor.x = 0.5;
					ebullet.anchor.y = 0.5;
					
					ebullet.position.x= Math.random() *w ;
					ebullet.position.y= Math.random() *0.217*h;
					
					ebullet.width=0.06*w;
					ebullet.height=0.043*h;
					
					ebullets.push(ebullet);
					stage.addChild(ebullet);
				}
			};
			
			
			
				
				
				//----------------------------------------------------MOVE ENEMIES' BULLETS----------------------------------------------------------//
			function ebulletsmove()
			{
				for(var n=0; n< ebulletscount; n++)
				{
					if(ebullets[n].position.y>=1.05*h)
					{
						stage.removeChild(ebullets[n]);
						ebullets.splice( n, 1);
						n--;
						ebulletscount--;
						
					}
						
					else 
					{
						if(easiness==1)
						{
							ebullets[n].position.y+=1.5 + Math.random() ;
						}
						else if(easiness==2)
						{
							ebullets[n].position.y+=2 + Math.random() ;
						}
						else if(easiness==3)
						{
							ebullets[n].position.y+=3 + Math.random() ;
						}
						if(easiness==2 || easiness == 3 ) 
						{
							if (loops %10== 0 )
							{
								var movement;
								if(easiness==2)
								{
									movement=0.03*w;
								}
								else if(easiness==3)
								{
									movement=0.04*w;
								}
								var rnd =Math.floor( Math.random() * 2); 
								if ( rnd ==0 ) 
								{
									var newx = ebullets[n].position.x + Math.random() *movement ;
									if ( newx > w )
									{
										ebullets[n].position.x-=Math.random()* movement ;
									}
									else 
									{
										ebullets[n].position.x+=Math.random()* movement ;
									}
								}
								else 
								{
									var newx = ebullets[n].position.x - Math.random() *movement ;
									if ( newx < 0 )
									{
										ebullets[n].position.x+=Math.random() *movement;
									}
									else 
									{
										ebullets[n].position.x-=Math.random() *movement ;
									}
								}
							}
						}
					}
					
				};
				
			}
			//----------------------------------------------------------------CREATE EXPLOSION------------------------------------------------------------------//
			var explosion = new PIXI.Sprite(texture4);
				
			explosion.anchor.x=0.5;
			explosion.anchor.y=0.5;
			
			explosion.width=0.964*w;
			explosion.height=0.697*h;
			//----------------------------------------------------------------CREATE BONUS------------------------------------------------------------------//
			
			var extralife = new PIXI.Sprite(texture17);
			var clearall = new PIXI.Sprite(texture16);
			var mul2 = new PIXI.Sprite(texture14);
			var mul3 = new PIXI.Sprite(texture15);
			var bonus=[ extralife , clearall, mul2 , mul3 ];
			
			extralife.anchor.x=0.5;
			extralife.anchor.y=0.5;	
			
			extralife.width=0.232*w;
			extralife.height=0.16*h;
			
			clearall.anchor.x=0.5;
			clearall.anchor.y=0.5;	
			
			clearall.width=w/5;
			clearall.height=0.142*h;
			
			mul2.anchor.x=0.5;
			mul2.anchor.y=0.5;	
			
			mul2.width=w/5;
			mul2.height=0.142*h;
			
			mul3.anchor.x=0.5;
			mul3.anchor.y=0.5;	
			
			mul3.width=w/5;
			mul3.height=0.142*h;
			//---------------------------------------------------------------GENERATE BONUS---------------------------------------------------------------//
			function generatebonus()
			{
				ind= Math.floor(Math.random()*4);
				var b = bonus [ind];
				b.position.x=Math.random() * w;
				b.position.y= -0.043*h -(Math.random() * 0.072*h);
				bonuscount++;
				bonuses.push(b);
				index.push(ind);
				stage.addChild(b);
			}
			//----------------------------------------------------------------MOVE BONUS--------------------------------------------------------------//
			function bonusmove()
			{
				for(var n=0; n< bonuscount; n++)
				{
					if(bonuses[n].position.y>=1.05*h)
					{
						stage.removeChild(bonuses[n]);
						bonuses.splice( n, 1);
						index.splice(n,1);
						n--;
						bonuscount--;
						
					}
						
					else 
					{
						if(easiness==1)
						{
							bonuses[n].position.y+=1.5 + Math.random() ;
						}
						else
						{
							var movement;
							if(easiness==2)
							{
								bonuses[n].position.y+=2 + Math.random() ;
								movement=0.05*w;
							}
							else if(easiness==3)
							{
								bonuses[n].position.y+=3 + Math.random() ;
								movement=0.07*w;
							}
							if (loops %10== 0 )
							{
							
								var rnd =Math.floor( Math.random() * 2); 
								if ( rnd ==0 ) 
								{
									var newx = bonuses[n].position.x + Math.random() *movement ;
									if ( newx > w )
									{
										bonuses[n].position.x-=Math.random()* movement ;
									}
									else 
									{
										bonuses[n].position.x+=Math.random()* movement ;
									}
								}
								else 
								{
									var newx = bonuses[n].position.x - Math.random() *movement ;
									if ( newx < 0 )
									{
										bonuses[n].position.x+=Math.random() *movement ;
									}
									else 
									{
										bonuses[n].position.x-=Math.random() *movement ;
									}
								}
							}
						}
					}
						
				};
				
			}
			
			//----------------------------------------------------------------CHECK COLLISION----------------------------------------------------------//
			function checkcollision()
			{
				for(var l=0; l<enemiescount; l++)
				{	
					if((((jet.position.x + jet.width/2 < targets[l].position.x + targets[l].width/2 + 0.04*w &&
						jet.position.x + jet.width/2 > targets[l].position.x - targets[l].width/2 + 0.04*w) ||
						(jet.position.x - jet.width/2 < targets[l].position.x + targets[l].width/2 - 0.04*w&&
						jet.position.x - jet.width/2 > targets[l].position.x - targets[l].width/2 - 0.04*w)||
						(jet.position.x - jet.width/2 < targets[l].position.x - targets[l].width/2 - 0.04*w &&
						jet.position.x + jet.width/2 > targets[l].position.x + targets[l].width/2 + 0.04*w)) &&
						((jet.position.y -jet.height/2 < targets[l].position.y + targets[l].height/2- 0.03*h &&
						jet.position.y -jet.height/2 > targets[l].position.y - targets[l].height/2- 0.03*h) ||
						jet.position.y +jet.height/2 < targets[l].position.y + targets[l].height/2+ 0.03*h &&
						jet.position.y +jet.height/2 > targets[l].position.y - targets[l].height/2+ 0.03*h))&&player1exists==1)
										
					{
						explosion.position.x= jet.position.x;
						explosion.position.y= jet.position.y;
						stage.addChild(explosion);
						ex=1;
						jet.dragging=false;
						jet.setInteractive(false);
						stage.removeChild(jet);
						player1exists=0;
						if(players==2 && player2exists==1)
						{
							stage.removeChild(jet2);
							window.removeEventListener('keydown',this.check,false);
							player2exists=0;
						}
						isdead=1;
						died1=1;
						loops=0;
						x2=0;
						x3=0;
						loopsx2=0;
						loopsx3=0;
						if(soundmute==0)
						{
							exsound.play();
						}
					}
				}
				
				for(var l=0; l<enemiescount; l++)
				{				
					for(var m=0; m<count; m++)
					{
						if (bullets[m].position.x < targets[l].position.x + targets[l].width/2 &&
							bullets[m].position.x > targets[l].position.x - targets[l].width/2&&
							bullets[m].position.y < targets[l].position.y + targets[l].height/2- 0.03*h &&
							bullets[m].position.y > targets[l].position.y - targets[l].height/2+ 0.03*h)
						{
							stage.removeChild(bullets[m]);
							stage.removeChild(targets[l]);
							bullets.splice( m, 1);
							targets.splice( l, 1);
							enemiescount--;
							count--;
							l--;
							m--;
							if(x2==1)
							{
								score+=20
							}
							else if(x3==1)
							{
								score+=30
							}
							else
							{
								score+=10;
							}
							document.getElementById('score').innerHTML = 'Score : ' + score; 
							
						}
					}
				}
				for(var j=0; j<ebulletscount; j++)
				{
					if ((ebullets[j].position.x < jet.position.x + jet.width/2 &&
						ebullets[j].position.x > jet.position.x - jet.width/2&&
						ebullets[j].position.y < jet.position.y + jet.height/2- 0.03*h &&
						ebullets[j].position.y > jet.position.y - jet.height/2+ 0.03*h)&&player1exists==1)
					{
						explosion.position.x= jet.position.x;
						explosion.position.y= jet.position.y;
						stage.addChild(explosion);
						ex=1;
						jet.dragging=false;
						jet.setInteractive(false);
						stage.removeChild(jet);
						player1exists=0;
						if(players==2)
						{
							stage.removeChild(jet2);
							window.removeEventListener('keydown',this.check,false);
							player2exists=0;
						}
						isdead=1;
						died1=1;
						loops=0;
						x2=0;
						x3=0;
						loopsx2=0;
						loopsx3=0;
						if(soundmute==0)
						{
							exsound.play();
						}
					}
				}
				
				for(var k=0; k<bonuscount; k++)
				{	
					if((((jet.position.x + jet.width/2 < bonuses[k].position.x + bonuses[k].width/2 + 0.04*w &&
						jet.position.x + jet.width/2 > bonuses[k].position.x - bonuses[k].width/2 + 0.04*w) ||
						(jet.position.x - jet.width/2 < bonuses[k].position.x + bonuses[k].width/2 - 0.04*w&&
						jet.position.x - jet.width/2 > bonuses[k].position.x - bonuses[k].width/2 - 0.04*w)||
						(jet.position.x - jet.width/2 < bonuses[k].position.x - bonuses[k].width/2 - 0.04*w &&
						jet.position.x + jet.width/2 > bonuses[k].position.x + bonuses[k].width/2 + 0.04*w)) &&
						((jet.position.y -jet.height/2 < bonuses[k].position.y + bonuses[k].height/2- 0.03*h &&
						jet.position.y -jet.height/2 > bonuses[k].position.y - bonuses[k].height/2- 0.03*h) ||
						jet.position.y +jet.height/2 < bonuses[k].position.y + bonuses[k].height/2+ 0.03*h &&
						jet.position.y +jet.height/2 > bonuses[k].position.y - bonuses[k].height/2+ 0.03*h))&& player1exists==1)
										
					{
						var i=index[k];
						stage.removeChild(bonuses[k]);
						bonuses.splice( k, 1);
						index.splice(k,1);
						bonuscount--;
						k--;
						
						if(i==0)
						{
							if(lifes<3)
							{
								lifes++;
							}
							if(lifes==3)
							{
								stage.addChild(smalljet3);
							}
							else if(lifes==2)
							{
								stage.addChild(smalljet2);
							}
							if(lifes==1)
							{
								stage.addChild(smalljet1);
							}
						}
						else if (i==1)
						{
							cleeear();
						}
						else if (i==2)
						{
							x2=1;
						}
						else if (i==3)
						{
							x3=1;
						}
					}
				}
				
				if(players==2)
				{
					for(var l=0; l<enemiescount; l++)
					{	
						if((((jet2.position.x + jet2.width/2 < targets[l].position.x + targets[l].width/2 + 0.04*w &&
							jet2.position.x + jet2.width/2 > targets[l].position.x - targets[l].width/2 + 0.04*w) ||
							(jet2.position.x - jet2.width/2 < targets[l].position.x + targets[l].width/2 - 0.04*w&&
							jet2.position.x - jet2.width/2 > targets[l].position.x - targets[l].width/2 - 0.04*w)||
							(jet2.position.x - jet2.width/2 < targets[l].position.x - targets[l].width/2 - 0.04*w &&
							jet2.position.x + jet2.width/2 > targets[l].position.x + targets[l].width/2 + 0.04*w)) &&
							((jet2.position.y -jet2.height/2 < targets[l].position.y + targets[l].height/2- 0.03*h &&
							jet2.position.y -jet2.height/2 > targets[l].position.y - targets[l].height/2- 0.03*h) ||
							jet2.position.y +jet2.height/2 < targets[l].position.y + targets[l].height/2+ 0.03*h &&
							jet2.position.y +jet2.height/2 > targets[l].position.y - targets[l].height/2+ 0.03*h))&& player2exists==1)
											
						{
							explosion.position.x= jet2.position.x;
							explosion.position.y= jet2.position.y;
							stage.addChild(explosion);
							ex=1;
							window.removeEventListener('keydown',this.check,false);
							stage.removeChild(jet2);
							player2exists=0;
							if(player1exists==1)
							{
								stage.removeChild(jet);
								jet.dragging=true;
								jet.setInteractive(true);
								player1exists=0;
							}
							isdead2=1;
							died2=1;
							loops=0;
							x22=0;
							x23=0;
							loopsx22=0;
							loopsx32=0;
							if(soundmute==0)
							{
								exsound.play();
							}
						}
					}
					
					for(var l=0; l<enemiescount; l++)
					{				
						for(var m=0; m<count2; m++)
						{
							if (bullets2[m].position.x < targets[l].position.x + targets[l].width/2 &&
								bullets2[m].position.x > targets[l].position.x - targets[l].width/2&&
								bullets2[m].position.y < targets[l].position.y + targets[l].height/2- 0.03*h &&
								bullets2[m].position.y > targets[l].position.y - targets[l].height/2+ 0.03*h)
							{
								stage.removeChild(bullets2[m]);
								stage.removeChild(targets[l]);
								bullets2.splice( m, 1);
								targets.splice( l, 1);
								enemiescount--;
								count2--;
								l--;
								m--;
								if(x22==1)
								{
									score2+=20
								}
								else if(x23==1)
								{
									score2+=30
								}
								else
								{
									score2+=10;
								}
								document.getElementById('score2').innerHTML = 'Score 2 : ' + score2; 
								
							}
						}
					}
					for(var j=0; j<ebulletscount; j++)
					{
						if ((ebullets[j].position.x < jet2.position.x + jet2.width/2 &&
							ebullets[j].position.x > jet2.position.x - jet2.width/2&&
							ebullets[j].position.y < jet2.position.y + jet2.height/2- 0.03*h &&
							ebullets[j].position.y > jet2.position.y - jet2.height/2+ 0.03*h)&&player2exists==1)
						{
							explosion.position.x= jet2.position.x;
							explosion.position.y= jet2.position.y;
							stage.addChild(explosion);
							ex=1;
							window.removeEventListener('keydown',this.check,false);
							stage.removeChild(jet2);
							player2exists=0;
							if(player1exists==1)
							{
								stage.removeChild(jet);
								jet.dragging=true;
								jet.setInteractive(true);
								player1exists=0;
							}	
							isdead2=1;
							died2=1;
							loops=0;
							x22=0;
							x23=0;
							loopsx22=0;
							loopsx32=0;
								if(soundmute==0)
							{
								exsound.play();
							}
						}
					}
					
					for(var k=0; k<bonuscount; k++)
					{	
						if((((jet2.position.x + jet2.width/2 < bonuses[k].position.x + bonuses[k].width/2 + 0.04*w &&
							jet2.position.x + jet2.width/2 > bonuses[k].position.x - bonuses[k].width/2 + 0.04*w) ||
							(jet2.position.x - jet2.width/2 < bonuses[k].position.x + bonuses[k].width/2 - 0.04*w&&
							jet2.position.x - jet2.width/2 > bonuses[k].position.x - bonuses[k].width/2 - 0.04*w)||
							(jet2.position.x - jet2.width/2 < bonuses[k].position.x - bonuses[k].width/2 - 0.04*w &&
							jet2.position.x + jet2.width/2 > bonuses[k].position.x + bonuses[k].width/2 + 0.04*w)) &&
							((jet2.position.y -jet2.height/2 < bonuses[k].position.y + bonuses[k].height/2- 0.03*h &&
							jet2.position.y -jet2.height/2 > bonuses[k].position.y - bonuses[k].height/2- 0.03*h) ||
							jet2.position.y +jet2.height/2 < bonuses[k].position.y + bonuses[k].height/2+ 0.03*h &&
							jet2.position.y +jet2.height/2 > bonuses[k].position.y - bonuses[k].height/2+ 0.03*h))&&player2exists==1)
											
						{
							var i=index[k];
							stage.removeChild(bonuses[k]);
							bonuses.splice( k, 1);
							index.splice(k,1);
							bonuscount--;
							k--;
							
							if(i==0)
							{
								if(lifes2<3)
								{
									lifes2++;
								}
								if(lifes2==3)
								{
									stage.addChild(smalljet23);
									sj3=1;
								}
								else if(lifes2==2)
								{
									stage.addChild(smalljet22);
									sj2=1;
								}
								if(lifes2==1)
								{
									stage.addChild(smalljet21);
									sj1=1;
								}
							}
							else if (i==1)
							{
								cleeear();
							}
							else if (i==2)
							{
								x22=1;
							}
							else if (i==3)
							{
								x23=1;
							}
						}
					}
				}
			}
			//------------------------------------------------------------CLEAR ALL------------------------------------------------------------------//
			function cleeear()
			{
				for(var i=0 ; i<count ;i++)
				{
					stage.removeChild(bullets[i]);
					bullets.splice(i,1);
					count--;
					i--;
				}
				if(players==2)
				{
					for(var i=0 ; i<count2 ;i++)
					{
						stage.removeChild(bullets2[i]);
						bullets2.splice(i,1);
						count2--;
						i--;
					}
				}
				for(var j=0 ; j<ebulletscount ;j++)
				{
					stage.removeChild(ebullets[j]);
					ebullets.splice(j,1);
					j--;
					ebulletscount--;
				}
				
				for(var m=0 ; m<enemiescount ;m++)
				{
					stage.removeChild(targets[m]);
					targets.splice(m,1);
					m--;
					enemiescount--;
				}
				
				for(var l=0 ; l<bonuscount ;l++)
				{
					stage.removeChild(bonuses[l]);
					bonuses.splice(l,1);
					index.splice(l,1);
					l--;
					bonuscount--;
				}

			}
			//-----------------------------------------------------------CKECK GAME OVER-------------------------------------------------------------//
			function checkgameover()
			{
				if(players==1)
				{
					if (lifes > 0 )
					{
						stage.removeChild(explosion);
						ex=0;
						
						cleeear();
						
						lifes--;
						
						if ( lifes == 2 )
						{
							stage.removeChild(smalljet3);
						}
						else if ( lifes == 1 )
						{
							stage.removeChild(smalljet2);
						}
						else if ( lifes == 0 )
						{
							stage.removeChild(smalljet1);
						}
						
						jet.position.x = w/2;
						jet.position.y = 0.87*h;
						
						jet.dragging=true;
						jet.setInteractive(true);
						
						
						stage.addChild(jet);
						player1exists=1;
						stage.addChild(pause);
						stage.addChild(resume);
						stage.addChild(mute);
						stage.addChild(loud);
						stage.addChild(restart);
						stage.addChild(menu);
					}
					else
					{
						
						stage.removeChild(explosion);
						ex=0;
						gamepause=0;
						over=3;		
					}
					loops=0;
				}	
				else if(players==2)
				{
					if ((lifes>0 || lifes2>0) || (lifes==0 && lifes2==0 && (died1==1 || died2==1)) )
					{
						stage.removeChild(explosion);
						ex=0;
						
						cleeear();
						if(died1==1)
						{
							lifes--;
							
							if ( lifes == 2 )
							{
								stage.removeChild(smalljet3);
							}
							else if ( lifes == 1 )
							{
								stage.removeChild(smalljet2);
							}
							else if ( lifes == 0 )
							{
								stage.removeChild(smalljet1);
							}
							died1=0;
						}
						if(died2==1)
						{
							lifes2--;
							
							if ( lifes2 == 2 )
							{
								stage.removeChild(smalljet23);
								sj3=0;
							}
							else if ( lifes2 == 1 )
							{
								stage.removeChild(smalljet22);
								sj2=0;
							}
							else if ( lifes2 == 0 )
							{
								stage.removeChild(smalljet21);
								sj1=0;
							}
							died2=0;
						}
						if(lifes>=0)
						{
							jet.position.x = w*2/3;
							jet.position.y = 0.87*h;
							
							jet.dragging=true;
							jet.setInteractive(true);
							
							stage.addChild(jet);
							player1exists=1;
						}
					
						if(lifes2>=0 )
						{
							jet2.position.x = w/3;
							jet2.position.y = 0.87*h;
							window.addEventListener('keydown',this.check,false);
							stage.addChild(jet2);
							player2exists=1;
							
						}
						if(ex==1)
						{
							stage.removeChild(explosion);
							ex=0;
						}	
						stage.addChild(pause);
						stage.addChild(resume);
						stage.addChild(mute);
						stage.addChild(loud);
						stage.addChild(restart);
						stage.addChild(menu);
					}
					else
					{
						
						stage.removeChild(explosion);
						ex=0;

						if(score > score2)
						{
							winner=1;
						}
						else if(score2 > score)
						{
							winner=2;
						}
						else if (score==score2)
						{
							winner=3;
						}
						
						gamepause=0;
						over=3;
					}
					loops=0;
				}	
			}
			
			//------------------------------------------------------------CREATE PAUSE ---------------------------------------------------------------//
			
			var pause = new PIXI.Sprite(texture8);
			
			pause.setInteractive(true);
			pause.anchor.x = 0.5;
			pause.anchor.y = 0.5;
			
			pause.position.x = 0.9*w;
			pause.position.y = 0.97*h;
			
			pause.width=0.048*w;
			pause.height=0.035*h;
			stage.addChild(pause);
			
			//------------------------------------------------------------CREATE RESUME ---------------------------------------------------------------//
			var resume = new PIXI.Sprite(texture9);
			
			resume.setInteractive(true);
			resume.anchor.x = 0.5;
			resume.anchor.y = 0.5;
			
			resume.position.x = 0.96*w;
			resume.position.y = 0.97*h;
			
			resume.width=0.048*w;
			resume.height=0.035*h;
			stage.addChild(resume);
			
			//--------------------------------------------------------------- PAUSE ---------------------------------------------------------------//
			pause.mousedown = pause.touchstart = function(data)
			{
				gamepause=1;	
				a.pause();
			}
			
			//-------------------------------------------------------------- RESUME ---------------------------------------------------------------//
			
				resume.mousedown = resume.touchstart = function(data)
				{
					if(gamepause==1)
					{
						gamepause=0;
						if(soundmute==0)
						{
							a.play();
						}
						requestAnimFrame( animate );
					}
				}
			
			//------------------------------------------------------------CREATE MUTE ---------------------------------------------------------------//
			
			var mute = new PIXI.Sprite(texture10);
			
			mute.setInteractive(true);
			mute.anchor.x = 0.5;
			mute.anchor.y = 0.5;
			
			mute.position.x = 0.9*w;
			mute.position.y = 0.927*h;
			
			mute.width=0.048*w;
			mute.height=0.035*h;
			
			stage.addChild(mute);
			
			//------------------------------------------------------------CREATE LOUD ---------------------------------------------------------------//
			
			var loud = new PIXI.Sprite(texture11);
			
			loud.setInteractive(true);
			loud.anchor.x = 0.5;
			loud.anchor.y = 0.5;
			
			loud.position.x = 0.96*w;
			loud.position.y = 0.927*h;
			
			loud.width=0.048*w;
			loud.height=0.035*h;
			
			stage.addChild(loud);
			
			//--------------------------------------------------------------- MUTE ---------------------------------------------------------------//
			
			mute.mousedown = mute.touchstart = function(data)
			{
				a.pause();
				soundmute=1;
			}
			
			//--------------------------------------------------------------- LOUD ---------------------------------------------------------------//
			
			loud.mousedown = loud.touchstart = function(data)
			{
				a.play();
				soundmute=0;
			}
			
			//------------------------------------------------------------CREATE RESTART ---------------------------------------------------------------//
			
			var restart = new PIXI.Sprite(texture13);
			
			restart.setInteractive(true);
			restart.anchor.x = 0.5;
			restart.anchor.y = 0.5;
			
			restart.position.x = 0.9*w;
			restart.position.y = 0.884*h;
			
			restart.width=0.048*w;
			restart.height=0.035*h;
			
			stage.addChild(restart);
			
			//---------------------------------------------------------------RESTART---------------------------------------------------------------//
			
			
			function st()
			{
				
				winner=0;
				score2=0;
				document.getElementById('score2').innerHTML = 'Score 2 : ' + score2; 
				
				cleeear();
				
				if(ex==1)
				{
					stage.removeChild(explosion);
					ex=0;
				}
				
				lifes=3;
				
				stage.addChild(smalljet1);
				stage.addChild(smalljet2);
				stage.addChild(smalljet3);
				if(players==2)
				{
					lifes2=3;
				
					stage.addChild(smalljet21);
					stage.addChild(smalljet22);
					stage.addChild(smalljet23);
					sj1=1;
					sj2=1;
					sj3=1;
				
				}
				else
				{
					if(player2exists==1)
					{
						stage.removeChild(jet2);
						player2exists=0;
						window.removeEventListener('keydown',this.check,false);
					}
					if(sj1==1)
					{
						stage.removeChild(smalljet21);
						sj1=0;
					}
					if(sj2==1)
					{
						stage.removeChild(smalljet22);
						sj2=0;
					}	
					if(sj3==1)
					{
						stage.removeChild(smalljet23);
						sj3=0;
					}
					
					for(var i=0 ; i<count2 ;i++)
					{
						stage.removeChild(bullets2[i]);
						bullets2.splice(i,1);
						count2--;
						i--;
				
					}
					
				}
				score=0;
				document.getElementById('score').innerHTML = 'Score : ' + score; 
				
				loops=0;
				waitdie=0;
				x2=0;
				x3=0;
				loopsx2=0;
				loopsx3=0;
				if (players==1)
				{
					jet.position.x = w/2;
					jet.position.y = h*0.87;
				}
				else 
				{
					jet.position.x = w*2/3;
					jet.position.y = h*0.87;
					
					jet2.position.x = w/3;
					jet2.position.y = h*0.87;
					stage.addChild(jet2);
					player2exists=1;
					window.addEventListener('keydown',this.check,false);
				}
				jet.dragging=true;
				jet.setInteractive(true);
				
				
				stage.addChild(jet);
				player1exists=1;
				stage.addChild(pause);
				stage.addChild(resume);
				stage.addChild(mute);
				stage.addChild(loud);
				stage.addChild(restart);
				stage.addChild(menu);
				
				if(gamepause==1)
				{
					gamepause=0;
					requestAnimFrame(animate);
				}
				
			}
			
			restart.mousedown = restart.touchstart = function(data)
			{
				st();
				if ( soundmute == 0)
				{
					a.play();
				}
			}
			
			//------------------------------------------------------------CREATE MENU ---------------------------------------------------------------//
			
			var menu = new PIXI.Sprite(texture28);
			
			menu.setInteractive(true);
			menu.anchor.x = 0.5;
			menu.anchor.y = 0.5;
			
			menu.position.x = 0.96*w;
			menu.position.y = 0.884*h;
			
			menu.width=0.048*w;
			menu.height=0.035*h;
			
			stage.addChild(menu);
			//--------------------------------------------------------------MENU-------------------------------------------------------------------------//
			menu.mousedown = menu.touchstart = function(data)
			{
				if(over==2)
				{
					if(gamepause==1)
					{
						gamepause=0;
						requestAnimFrame(animate);
					}
					returntofirstpage();
					over=0;
				}
			}
			//-----------------------------------------------------------CREATE GAME OVER-------------------------------------------------------------//
			var gameover = new PIXI.Sprite(texture18);
			
			gameover.anchor.x=0.5;
			gameover.anchor.y=0.5;
			
			gameover.position.x=w/2;
			gameover.position.y=h/2;
			
			gameover.width=w;
			gameover.height=h;
			
			var playagain = new PIXI.Sprite(texture19);
			
			playagain.anchor.x=0.5;
			playagain.anchor.y=0.5;
			
			
			playagain.width=0.546*w;
			playagain.height=0.07*h;
			
			playagain.setInteractive(true);
			
			var mainmenu = new PIXI.Sprite(texture20);
			
			mainmenu.anchor.x=0.5;
			mainmenu.anchor.y=0.5;
						
			mainmenu.width=0.546*w;
			mainmenu.height=0.07*h;
			
			mainmenu.setInteractive(true);
			
			var winner1= new PIXI.Sprite(texture32);
			var winner2= new PIXI.Sprite(texture33);
			var tie= new PIXI.Sprite(texture34);
			
			winner1.anchor.x=0.5;
			winner1.anchor.y=0.5;
						
			winner1.width= w;
			winner1.height=0.07*h;
			
			winner2.anchor.x=0.5;
			winner2.anchor.y=0.5;
						
			winner2.width= w;
			winner2.height=0.07*h;
			
			tie.anchor.x=0.5;
			tie.anchor.y=0.5;
						
			tie.width= 0.8*w;
			tie.height=0.07*h;
			stage1.addChild(gameover);
			
			function showresults()
			{
				if(waswinner==1)
				{
					stage1.removeChild(winner1);
				}
				else if(waswinner==2)
				{
					stage1.removeChild(winner2);
				}
				else if(waswinner==3)
				{
					stage1.removeChild(tie);
				}
			
				if (players==1)
				{
					playagain.position.x=w/2;
					playagain.position.y=0.58*h;
					
					mainmenu.position.x=w/2;
					mainmenu.position.y=0.68*h;
				}
				else if (players==2)
				{
					if(winner==1)
					{
						winner1.position.x=w/2;
						winner1.position.y=0.58*h;
						waswinner=1;
						stage1.addChild(winner1);
					}
					else if (winner==2)
					{
						winner2.position.x=w/2;
						winner2.position.y=0.58*h;
						waswinner=2;
						stage1.addChild(winner2);
					}
					else if (winner==3)
					{
						tie.position.x=w/2;
						tie.position.y=0.58*h;
						waswinner=3;
						stage1.addChild(tie);
					}
					playagain.position.x=w/2;
					playagain.position.y=0.68*h;
					
					mainmenu.position.x=w/2;
					mainmenu.position.y=0.78*h;
					
					
				}
				
				
				stage1.addChild(playagain);
				stage1.addChild(mainmenu);
			}
			//------------------------------------------------------------PLAY AGAIN---------------------------------------------------------------//
			
			
			playagain.mousedown = playagain.touchstart = function(data)
			{
				if(over==3)
				{
					if(soundmute==0)
					{
						btnclick.play();
					}
					st();
					over=2;
				}
			}
			
			
			//------------------------------------------------------------MAIN MENU---------------------------------------------------------------//
			
			
			mainmenu.mousedown = mainmenu.touchstart = function(data)
			{
				if(over==3)
				{
					if(soundmute==0)
					{
						btnclick.play();
					}
					returntofirstpage();
					over=0;
				}
			}
			//----------------------------------------------------------------ANIMATE-----------------------------------------------------------------//
			
			function animate() {
				if(over==0)
				{
					requestAnimFrame(animate);
					renderer.render(stage2);
				}
				
				else if(over==3)
				{
					requestAnimFrame(animate);
					showresults();
					renderer.render(stage1);
				}
				else if(over==2)
				{
					if(gamepause==0)
					{
						requestAnimFrame( animate );
						loops ++; 
						if((isdead==1) && (ex==1))
						{
							waitdie++;
							if(waitdie%100 ==0 )
							{
								checkgameover();
								waitdie=0;
								isdead=0;
							}
						}
						
						else if((isdead2==1) && (ex==1))
						{
							waitdie++;
							if(waitdie%100 ==0 )
							{
								checkgameover();
								waitdie=0;
								isdead2=0;
								
							}
						}
						
						else
						{
							if(x2==1)
							{
								loopsx2++;
								if(loopsx2==500)
								{
									x2=0;
									loopsx2=0;
								}
							}
							if(x3==1)
							{
								loopsx3++;
								if(loopsx3==500)
								{
									x3=0;
									loopsx3=0;
								}
							}
							if(players==2)
							{
								if(x22==1)
								{
									loopsx22++;
									if(loopsx22==500)
									{
										x22=0;
										loopsx22=0;
									}
								}
								if(x23==1)
								{
									loopsx32++;
									if(loopsx32==500)
									{
										x23=0;
										loopsx32=0;
									}
								}
							
							}
							backgroundmove();
									
							if (loops% 100 ==0)
							{
								generateenemies();
								
							}
							if (loops %400==0)
							{
								generatebullets();
							}
							if(loops == 800 ) 
							{
								generatebonus();
								loops=0;
							}
								
							enemiesmove();
							bulletsmove();
							ebulletsmove();
							bonusmove();
							checkcollision();
								
						}	
						renderer.render(stage);
					}
				}	
				
			}

		</script>

	</body>
</html>
